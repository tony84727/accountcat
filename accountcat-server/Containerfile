FROM rust:1.89-alpine3.21 AS compile_tool
RUN apk --no-cache add build-base openssl-dev openssl-libs-static
RUN --mount=type=cache,target=/root/.cargo cargo install sccache --locked
WORKDIR /project
ADD . .
RUN --mount=type=cache,target=/root/.cargo \
    --mount=type=cache,target=/project/target \
    --mount=type=cache,target=/root/.cache/sccache \
    RUSTC_WRAPPER=/usr/local/cargo/bin/sccache cargo build -p build_manifest --release && mkdir -p /project/bin && cp /project/target/release/build_manifest /project/bin/build_manifest

FROM node:24-alpine3.21 AS build_frontend

RUN apk --no-cache add make protoc protobuf-dev sed curl gcompat libstdc++ ffmpeg
WORKDIR /project
ADD ui ui
ADD proto proto
WORKDIR /project/ui
RUN npm install
COPY --from=compile_tool /project/bin/build_manifest ../target/release/build_manifest
RUN make

FROM rust:1.89-alpine3.21 AS compile_server
RUN apk --no-cache add build-base openssl-dev openssl-libs-static protoc protobuf-dev
RUN --mount=type=cache,target=/root/.cargo cargo install sccache --locked
WORKDIR /project
ENV SQLX_OFFLINE=true
ADD . .
RUN --mount=type=cache,target=/root/.cargo \
    --mount=type=cache,target=/project/target \
    --mount=type=cache,target=/root/.cache/sccache \
    RUSTC_WRAPPER=/usr/local/cargo/bin/sccache cargo build --release && mkdir -p /project/bin && cp /project/target/release/accountcat /project/bin/accountcat

FROM alpine:3.21
WORKDIR /opt/accountcat
COPY --from=compile_server /project/bin/accountcat .
COPY --from=build_frontend /project/ui/dist ./ui/dist
CMD ["/opt/accountcat/accountcat", "server"]
